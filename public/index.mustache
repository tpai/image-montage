<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Image Montage</title>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
        <link rel="stylesheet" type="text/css" href="css/style.css" />
    </head>
    <body>
        <div class="layout">
            <div id="container" class="free-wall"></div>
        </div>
        <div id="preload" style="display: none" />
        <script type="text/javascript" src="js/jquery-1.11.0.min.js"></script>
        <script type="text/javascript" src="js/lodash.min.js"></script>
        <script type="text/javascript" src="js/freewall.min.js"></script>
        <script type="text/javascript">
        $(function() {
            var $container = $('#container');
            var imageMontage = {
                init: function() {
                    var temp = "<div class='brick' style='width:{width}px; height: {height}px; background-color: {color}'><div class='cover'></div></div>";
                    var colour = [
                        "lightblue",
                        "lightcyan",
                        "lightcoral",
                        "lightpink",
                        "lightgrey",
                        "lightgreen",
                        "lightsalmon",
                        "lightskyblue",
                        "lightseagreen"
                    ];

                    // add empty brick as placeholder
                    var w = 1, h = 1, html = '', color = '', limitItem = 35;
                    for (var i = 0; i < limitItem; ++i) {
                        h = 1 + 2 * Math.random() << 0;
                        w = 2 + 2 * Math.random() << 0;
                        color = colour[colour.length * Math.random() << 0];
                        html += temp.replace(/\{height\}/g, h*150).replace(/\{width\}/g, w*150).replace("{color}", color);
                    }
                    $container.html(html);
                    this.freewall();

                    // fetch random image from imgur
                    var counter = 1;
                    this.fetchImages(counter);

                    // reload every 60s
                    setInterval(() => {
                        counter ++;
                        for (var i = 1; i < window.setInterval("", 9999); i++)
                            window.clearInterval(i);
                        this.fetchImages(counter);
                    }, 60000);
                },
                preloadImage: function(arr) {
                    $("#preload").html("");
                    _.map(arr, function(val) {
                        $("#preload").append("<img src='"+val+"' />");
                    });
                },
                fixImageSize: function(data) {
                    var $target = data.target;
                    var parent = data.parent;
                    var pWidth = parseInt(parent.width, 10);
                    var pHeight = parseInt(parent.height, 10);
                    var child = data.child;
                    var cWidth = parseInt(child.width, 10);
                    var cHeight = parseInt(child.height, 10);

                    if(cHeight*pWidth/cWidth < pHeight) {
                        $target.attr("style", "height: "+pHeight+"px");
                    }
                    else {
                        $target.attr("style", "width: "+pWidth+"px");
                    }
                },
                freewall: function() {
                    var self = this;
                    var wall = new Freewall('#container');
                    wall.reset({
                        selector: '.brick',
                        cellW: 160,
                        cellH: 160,
                        gutterX: 15,
                        gutterY: 15,
                        onResize: function() {
                            wall.fitZone($(window).width() - 30, $(window).height() - 30);
                        },
                        onComplete: function() {
                            $.each($(".brick img"), function(i, val) {
                                var $img = $(val);
                                self.fixImageSize({
                                    target: $img,
                                    parent: {
                                        width: $img.parent().css("width"),
                                        height: $img.parent().css("height")
                                    },
                                    child: {
                                        width: $img.css("width"),
                                        height: $img.css("height")
                                    }
                                });
                            });
                        }
                    });
                    wall.fitZone($(window).width() - 30, $(window).height() - 30);
                },
                fetchImages: function(i) {
                    var self = this;
                    new Promise(function(resolve, reject) {
                        $.ajax({
                            method: 'GET',
                            url: 'https://api.imgur.com/3/gallery/random/random/'+i,
                            headers: {
                                Authorization: '{{ CLIENT_ID }}'
                            }
                        }).done(function(data) {
                            resolve(data.data);
                        }).fail(function(xhr, status, err) {
                            reject(err);
                        })
                    })
                    .then(function(data) {
                        var srcs = _.filter(
                            _.map(data, function(val) {
                                if(val.type)return val.link;
                            }), function(link) {
                                return link !== undefined;
                            });
                        self.preloadImage(srcs);

                        var arr = $(".cover");
                        var i = setInterval(function() {
                            var $target = $(arr.splice(0, 1));
                            // width and height of brick
                            var pWidth = parseInt($target.parent().css("width"), 10);
                            var pHeight = parseInt($target.parent().css("height"), 10);
                            var $img =
                                $("<img src='"+srcs.shift()+"' class='cover' />")
                                    .load(function() {
                                        // natural width and height of image
                                        var nWidth = $img.prop("naturalWidth");
                                        var nHeight = $img.prop("naturalHeight");

                                        $target
                                            .parent()
                                            .fadeOut(500, function() {
                                                $target.replaceWith($img);
                                                self.fixImageSize({
                                                    target: $img,
                                                    parent: {
                                                        width: pWidth,
                                                        height: pHeight
                                                    },
                                                    child: {
                                                        width: nWidth,
                                                        height: nHeight
                                                    }
                                                });
                                            })
                                            .fadeIn(500);
                                    });
                            arr.length === 0 && clearInterval(i);
                        }, 3000);
                    });
                }
            };
            imageMontage.init();
        });
        </script>
    </body>
</html>
